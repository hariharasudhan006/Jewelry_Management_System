/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jewelry_management_system.dashboard;

import jewelry_management_system.db.DBHelper;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

/**
 *
 * @author Harihara sudhan
 */
public class Dashboard extends javax.swing.JFrame {

    private static List<TableData> table;
    private DBHelper helper = null;


    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        helper = DBHelper.getDBHelperInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appNameLabel = new javax.swing.JLabel();
        myAccountBtn = new javax.swing.JButton();
        viewOrdersTab = new javax.swing.JTabbedPane();
        homeTab = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        orderPlaceTab = new javax.swing.JPanel();
        operationPromptLabel = new javax.swing.JLabel();
        jewelIDPromptLabel = new javax.swing.JLabel();
        txtPOJewelID = new javax.swing.JTextField();
        wastagePromptLabel = new javax.swing.JLabel();
        txtPOWastage = new javax.swing.JTextField();
        discountPromptLabel = new javax.swing.JLabel();
        txtPODiscount = new javax.swing.JTextField();
        txtPromptLabel = new javax.swing.JLabel();
        txtPOTax = new javax.swing.JTextField();
        custDetailsPromptLabel = new javax.swing.JLabel();
        custNamePromptLabel = new javax.swing.JLabel();
        txtPOCustName = new javax.swing.JTextField();
        custAddressPromptLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAPOCustAdd = new javax.swing.JTextArea();
        custContactPromptLabel = new javax.swing.JLabel();
        txtPOCustPhone = new javax.swing.JTextField();
        placeOrderBtn = new javax.swing.JButton();
        addJewelTab = new javax.swing.JPanel();
        txtJewelDiscount = new javax.swing.JTextField();
        jewelDiscountLabel = new javax.swing.JLabel();
        txtJewelCarat = new javax.swing.JTextField();
        jewelCaratLabel = new javax.swing.JLabel();
        jewelWeightLabel = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        operationLabel = new javax.swing.JLabel();
        jewelIDLabel = new javax.swing.JLabel();
        jewelNameLabel = new javax.swing.JLabel();
        txtJewelName = new javax.swing.JTextField();
        jewelPriceLabel = new javax.swing.JLabel();
        txtJewelPrice = new javax.swing.JTextField();
        txtJewelID = new javax.swing.JTextField();
        txtJewelWeight = new javax.swing.JTextField();
        viewOrder = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appNameLabel.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        appNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appNameLabel.setText("Jewelry Management System");

        myAccountBtn.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        myAccountBtn.setText("My Account");
        myAccountBtn.setMaximumSize(new java.awt.Dimension(599, 521));
        myAccountBtn.setMinimumSize(new java.awt.Dimension(599, 521));
        myAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myAccountBtnActionPerformed(evt);
            }
        });

        viewOrdersTab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                viewOrdersTabFocusGained(evt);
            }
        });
        viewOrdersTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewOrdersTabMouseClicked(evt);
            }
        });

        homeTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeTabMouseClicked(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Jewel ID", "Jewel name", "Price", "Weight"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setColumnSelectionAllowed(true);
        homeTab.setViewportView(productTable);
        productTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        viewOrdersTab.addTab("Home", homeTab);

        operationPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        operationPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        operationPromptLabel.setText("Place order");

        jewelIDPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelIDPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelIDPromptLabel.setText("Jewel ID");

        txtPOJewelID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        wastagePromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        wastagePromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        wastagePromptLabel.setText("Wastage");

        txtPOWastage.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        discountPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        discountPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        discountPromptLabel.setText("Discount");

        txtPODiscount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        txtPromptLabel.setText("Tax");

        txtPOTax.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        custDetailsPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        custDetailsPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        custDetailsPromptLabel.setText("Customer Details");

        custNamePromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        custNamePromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        custNamePromptLabel.setText("Customer Name");

        txtPOCustName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        custAddressPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        custAddressPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        custAddressPromptLabel.setText("Customer Address");

        txtAPOCustAdd.setColumns(20);
        txtAPOCustAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAPOCustAdd.setRows(5);
        jScrollPane1.setViewportView(txtAPOCustAdd);

        custContactPromptLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        custContactPromptLabel.setForeground(new java.awt.Color(0, 0, 255));
        custContactPromptLabel.setText("Phone Number");

        txtPOCustPhone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPOCustPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPOCustPhoneActionPerformed(evt);
            }
        });

        placeOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        placeOrderBtn.setForeground(new java.awt.Color(0, 0, 255));
        placeOrderBtn.setText("Place");
        placeOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout orderPlaceTabLayout = new javax.swing.GroupLayout(orderPlaceTab);
        orderPlaceTab.setLayout(orderPlaceTabLayout);
        orderPlaceTabLayout.setHorizontalGroup(
            orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPlaceTabLayout.createSequentialGroup()
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(146, 157, Short.MAX_VALUE)
                        .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPlaceTabLayout.createSequentialGroup()
                                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(discountPromptLabel)
                                    .addComponent(wastagePromptLabel)
                                    .addComponent(txtPromptLabel))
                                .addGap(241, 241, 241)
                                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPOWastage, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                    .addComponent(txtPODiscount)
                                    .addComponent(txtPOTax)))
                            .addGroup(orderPlaceTabLayout.createSequentialGroup()
                                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(custAddressPromptLabel)
                                    .addComponent(custNamePromptLabel)
                                    .addComponent(custContactPromptLabel))
                                .addGap(195, 195, 195)
                                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPOCustName)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                                    .addComponent(txtPOCustPhone)))))
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jewelIDPromptLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPOJewelID, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(83, 83, 83)
                .addComponent(placeOrderBtn)
                .addGap(72, 72, 72))
            .addGroup(orderPlaceTabLayout.createSequentialGroup()
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(operationPromptLabel))
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(custDetailsPromptLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        orderPlaceTabLayout.setVerticalGroup(
            orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPlaceTabLayout.createSequentialGroup()
                .addComponent(operationPromptLabel)
                .addGap(18, 18, 18)
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPOJewelID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelIDPromptLabel))
                .addGap(18, 18, 18)
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPOWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wastagePromptLabel))
                .addGap(18, 18, 18)
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPODiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discountPromptLabel))
                .addGap(18, 18, 18)
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPromptLabel)
                    .addComponent(txtPOTax, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(placeOrderBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(custDetailsPromptLabel)
                .addGap(31, 31, 31)
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPOCustName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(custNamePromptLabel))
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(custAddressPromptLabel))
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(orderPlaceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(custContactPromptLabel)
                        .addGap(68, 68, 68))
                    .addGroup(orderPlaceTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtPOCustPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        viewOrdersTab.addTab("Place Order", orderPlaceTab);

        txtJewelDiscount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jewelDiscountLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelDiscountLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelDiscountLabel.setText("Discount");

        txtJewelCarat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jewelCaratLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelCaratLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelCaratLabel.setText("carat");

        jewelWeightLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelWeightLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelWeightLabel.setText("weight");

        saveBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(0, 0, 255));
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        operationLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        operationLabel.setForeground(new java.awt.Color(0, 0, 255));
        operationLabel.setText("Add Jewel");

        jewelIDLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelIDLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelIDLabel.setText("Jewel ID");

        jewelNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelNameLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelNameLabel.setText("Jewel name");

        txtJewelName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jewelPriceLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelPriceLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelPriceLabel.setText("Price");

        txtJewelPrice.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtJewelID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtJewelWeight.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout addJewelTabLayout = new javax.swing.GroupLayout(addJewelTab);
        addJewelTab.setLayout(addJewelTabLayout);
        addJewelTabLayout.setHorizontalGroup(
            addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addJewelTabLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addJewelTabLayout.createSequentialGroup()
                        .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jewelIDLabel)
                            .addComponent(jewelNameLabel))
                        .addGap(135, 135, 135)
                        .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJewelName)
                            .addComponent(txtJewelID)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addJewelTabLayout.createSequentialGroup()
                        .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jewelPriceLabel)
                            .addComponent(jewelDiscountLabel)
                            .addComponent(jewelCaratLabel)
                            .addComponent(jewelWeightLabel))
                        .addGap(153, 153, 153)
                        .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJewelCarat)
                            .addComponent(txtJewelDiscount)
                            .addComponent(txtJewelPrice)
                            .addComponent(txtJewelWeight))))
                .addGap(96, 96, 96))
            .addGroup(addJewelTabLayout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(operationLabel)
                .addContainerGap(499, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addJewelTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveBtn)
                .addGap(435, 435, 435))
        );
        addJewelTabLayout.setVerticalGroup(
            addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addJewelTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(operationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelIDLabel))
                .addGap(26, 26, 26)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelName, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelNameLabel))
                .addGap(18, 18, 18)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelPriceLabel))
                .addGap(28, 28, 28)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelDiscountLabel))
                .addGap(18, 18, 18)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelCarat, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelCaratLabel))
                .addGap(28, 28, 28)
                .addGroup(addJewelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jewelWeightLabel)
                    .addComponent(txtJewelWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(saveBtn)
                .addGap(21, 21, 21))
        );

        viewOrdersTab.addTab("Add Jewel", addJewelTab);

        viewOrder.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                viewOrderFocusGained(evt);
            }
        });
        viewOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewOrderMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Jewel ID", "Customer", "Address", "Date Time"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout viewOrderLayout = new javax.swing.GroupLayout(viewOrder);
        viewOrder.setLayout(viewOrderLayout);
        viewOrderLayout.setHorizontalGroup(
            viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
        );
        viewOrderLayout.setVerticalGroup(
            viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewOrderLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 81, Short.MAX_VALUE))
        );

        viewOrdersTab.addTab("Orders", viewOrder);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(appNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137)
                .addComponent(myAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addComponent(viewOrdersTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(viewOrdersTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myAccountBtnActionPerformed
        // TODO add your handling code here:
        Point point = myAccountBtn.getLocation();
        MyAccountPopup popup = new MyAccountPopup(this, point);
        popup.show();
    }//GEN-LAST:event_myAccountBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        boolean anyErrors = false;
        String id = txtJewelID.getText();
        String name = txtJewelName.getText();
        String price = txtJewelPrice.getText();
        String weight = txtJewelWeight.getText();
        String dis = txtJewelDiscount.getText();
        String carat = txtJewelCarat.getText();
        if(!"".equals(id) && !"".equals(name) && !"".equals(price) 
                && !"".equals(weight) && !"".equals(dis) && !"".equals(carat)){
            
            if(helper.verifyJewelId(id)){
                JOptionPane.showMessageDialog(this, "Jewel ID already exists");
                anyErrors = true;
                
            }
            int caratI = 0, priceI = 0;
            double discount = 0.0, weightD = 0.0;
            try{
                priceI = Integer.parseInt(price);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Invalid price given");
                anyErrors = true;
            }
            try{
                caratI = Integer.parseInt(carat);
                if(caratI > 24){
                    throw new Exception();
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Invalid carat given");
                anyErrors = true;
            }
            
            try{
                discount = Double.parseDouble(dis);
                if(discount > 100){
                    throw new Exception();
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Invalid discount given");
                anyErrors = true;
            }
            try{
                weightD = Double.parseDouble(weight);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this,"Invalid weight given");
                anyErrors = true;
            }
            
            if(!anyErrors){
                if(helper.InsertNewStock(id, name, priceI, discount, caratI, weightD)){
                    txtJewelID.setText("");
                    txtJewelPrice.setText("");
                    txtJewelName.setText("");
                    txtJewelDiscount.setText("");
                    txtJewelCarat.setText("");
                    txtJewelWeight.setText("");
                    JOptionPane.showMessageDialog(this, "Jewel details inserted");
                }else{
                    JOptionPane.showMessageDialog(this, "Something went wrong, unable to insert");
                }
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Kindly enter all the details");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void viewOrdersTabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_viewOrdersTabFocusGained
        // TODO add your handling code here:
        Dashboard.table = helper.GetStockTableData();
        javax.swing.table.DefaultTableModel model;
        model = new javax.swing.table.DefaultTableModel(null,
                new String [] {
                    "Jewel ID", "Jewel name", "Price", "Weight"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        Dashboard.table.forEach((data) -> {
            model.addRow(new String[] {data.getId(), data.getName(), data.getPrice().toString(), data.getWeight().toString()});
        });
        productTable.setModel(model);
    }//GEN-LAST:event_viewOrdersTabFocusGained

    private void viewOrdersTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewOrdersTabMouseClicked
        // TODO add your handling code here:
        Dashboard.table = helper.GetStockTableData();
        javax.swing.table.DefaultTableModel model;
        model = new javax.swing.table.DefaultTableModel(null,
                new String [] {
                    "Jewel ID", "Jewel name", "Price", "Weight"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        Dashboard.table.forEach((data) -> {
            model.addRow(new String[] {data.getId(), data.getName(), data.getPrice().toString(), data.getWeight().toString()});
        });
        productTable.setModel(model);
    }//GEN-LAST:event_viewOrdersTabMouseClicked

    private void txtPOCustPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPOCustPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPOCustPhoneActionPerformed

    private void homeTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeTabMouseClicked
        // TODO add your handling code here:
        Dashboard.table = helper.GetStockTableData();
        javax.swing.table.DefaultTableModel model;
        model = new javax.swing.table.DefaultTableModel(null,
                new String [] {
                    "Jewel ID", "Jewel name", "Price", "Weight"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        Dashboard.table.forEach((data) -> {
            model.addRow(new String[] {data.getId(), data.getName(), data.getPrice().toString(), data.getWeight().toString()});
        });
        productTable.setModel(model);
        productTable.addMouseListener(new MouseAdapter(){
               @Override
               public void mouseClicked(MouseEvent e){
                   int row = productTable.getSelectedRow();                   
                   String StockId = productTable.getValueAt(row, 0).toString();
                   ProductInsight.Start(StockId, true);
               }
           });
        javax.swing.table.DefaultTableModel model1;
        model1 = new javax.swing.table.DefaultTableModel(null,
                new String [] {
                    "Jewel ID", "Customer", "Address", "Date Time"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        List<List<String>> orders = helper.getOrderDetails();
        if(orders != null){
          orders.forEach((row) -> {
              model1.addRow(row.toArray());
          });
        }
        jTable1.setModel(model1);
        jTable1.addMouseListener(new MouseAdapter(){
               @Override
               public void mouseClicked(MouseEvent e){
                   int row = jTable1.getSelectedRow();  
                   String StockId = jTable1.getValueAt(row, 0).toString();
                   ProductInsight.Start(StockId, false);
               }
           });
    }//GEN-LAST:event_homeTabMouseClicked

    private void viewOrderFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_viewOrderFocusGained
        
        
    }//GEN-LAST:event_viewOrderFocusGained

    private void viewOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewOrderMouseClicked
        
    }//GEN-LAST:event_viewOrderMouseClicked

    private void placeOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderBtnActionPerformed
        // TODO add your handling code here:
        String jewelId = txtPOJewelID.getText();
        String sWastage = txtPOWastage.getText();
        String sDiscount = txtPODiscount.getText();
        String sTax = txtPOTax.getText();
        String custName = txtPOCustName.getText();
        String custAddress = txtAPOCustAdd.getText();
        String custPhone = txtPOCustPhone.getText();
        double wastage = 0.0, discount = 0.0, tax = 0.0;
        boolean isAnyErrors = false;
        try{
            wastage = Double.parseDouble(sWastage);
            discount = Double.parseDouble(sDiscount);
            tax = Double.parseDouble(sTax);
        }catch(Exception e){
            isAnyErrors = true;
            JOptionPane.showMessageDialog(this, "Invalid data given");
        }
        if(!isAnyErrors){
            if(helper.InsertBill(discount, wastage, tax, jewelId, custName, custAddress, custPhone)){
                JOptionPane.showMessageDialog(this, "Order placed");
            }else{
                JOptionPane.showMessageDialog(this, "Something went wrong unable to place order");
            }
            txtPOJewelID.setText("");
            txtPOWastage.setText("");
            txtPODiscount.setText("");
            txtPOTax.setText("");
            txtPOCustName.setText("");
            txtAPOCustAdd.setText("");
            txtPOCustPhone.setText("");
        }
    }//GEN-LAST:event_placeOrderBtnActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        DBHelper helper = DBHelper.getDBHelperInstance();
        table = helper.GetStockTableData();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | UnsupportedLookAndFeelException | IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->{
            Dashboard dashboard = new Dashboard();
            dashboard.homeTabMouseClicked(null);
            dashboard.setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addJewelTab;
    private javax.swing.JLabel appNameLabel;
    private javax.swing.JLabel custAddressPromptLabel;
    private javax.swing.JLabel custContactPromptLabel;
    private javax.swing.JLabel custDetailsPromptLabel;
    private javax.swing.JLabel custNamePromptLabel;
    private javax.swing.JLabel discountPromptLabel;
    private javax.swing.JScrollPane homeTab;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jewelCaratLabel;
    private javax.swing.JLabel jewelDiscountLabel;
    private javax.swing.JLabel jewelIDLabel;
    private javax.swing.JLabel jewelIDPromptLabel;
    private javax.swing.JLabel jewelNameLabel;
    private javax.swing.JLabel jewelPriceLabel;
    private javax.swing.JLabel jewelWeightLabel;
    private javax.swing.JButton myAccountBtn;
    private javax.swing.JLabel operationLabel;
    private javax.swing.JLabel operationPromptLabel;
    private javax.swing.JPanel orderPlaceTab;
    private javax.swing.JButton placeOrderBtn;
    private javax.swing.JTable productTable;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextArea txtAPOCustAdd;
    private javax.swing.JTextField txtJewelCarat;
    private javax.swing.JTextField txtJewelDiscount;
    private javax.swing.JTextField txtJewelID;
    private javax.swing.JTextField txtJewelName;
    private javax.swing.JTextField txtJewelPrice;
    private javax.swing.JTextField txtJewelWeight;
    private javax.swing.JTextField txtPOCustName;
    private javax.swing.JTextField txtPOCustPhone;
    private javax.swing.JTextField txtPODiscount;
    private javax.swing.JTextField txtPOJewelID;
    private javax.swing.JTextField txtPOTax;
    private javax.swing.JTextField txtPOWastage;
    private javax.swing.JLabel txtPromptLabel;
    private javax.swing.JPanel viewOrder;
    private javax.swing.JTabbedPane viewOrdersTab;
    private javax.swing.JLabel wastagePromptLabel;
    // End of variables declaration//GEN-END:variables
}
