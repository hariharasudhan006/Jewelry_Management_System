/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jewelry_management_system.dashboard;

import javax.swing.JOptionPane;
import jewelry_management_system.db.DBHelper;

/**
 *
 * @author Harihara sudhan
 */
public class ProductInsight extends javax.swing.JFrame {

    /**
     * Creates new form ProductInsight
     */
    private DBHelper helper;
    public ProductInsight() {
        helper = DBHelper.getDBHelperInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        operationLabel = new javax.swing.JLabel();
        jewelIDLabel = new javax.swing.JLabel();
        jewelNameLabel = new javax.swing.JLabel();
        jewelPriceLabel = new javax.swing.JLabel();
        jewelDiscountLabel = new javax.swing.JLabel();
        jewelCaratLabel = new javax.swing.JLabel();
        jewelWeightLabel = new javax.swing.JLabel();
        txtJewelID = new javax.swing.JTextField();
        txtJewelName = new javax.swing.JTextField();
        txtJewelPrice = new javax.swing.JTextField();
        txtJewelDiscount = new javax.swing.JTextField();
        txtJewelCarat = new javax.swing.JTextField();
        txtJewelWeight = new javax.swing.JTextField();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        operationLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        operationLabel.setForeground(new java.awt.Color(0, 0, 255));
        operationLabel.setText("Product Details");

        jewelIDLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelIDLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelIDLabel.setText("Jewel ID");

        jewelNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelNameLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelNameLabel.setText("Jewel name");

        jewelPriceLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelPriceLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelPriceLabel.setText("Price");

        jewelDiscountLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelDiscountLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelDiscountLabel.setText("Discount");

        jewelCaratLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelCaratLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelCaratLabel.setText("carat");

        jewelWeightLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jewelWeightLabel.setForeground(new java.awt.Color(0, 0, 255));
        jewelWeightLabel.setText("weight");

        txtJewelID.setEditable(false);
        txtJewelID.setBackground(new java.awt.Color(255, 255, 255));
        txtJewelID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtJewelID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJewelIDActionPerformed(evt);
            }
        });

        txtJewelName.setEditable(false);
        txtJewelName.setBackground(new java.awt.Color(255, 255, 255));
        txtJewelName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtJewelPrice.setEditable(false);
        txtJewelPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtJewelPrice.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtJewelPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJewelPriceActionPerformed(evt);
            }
        });

        txtJewelDiscount.setEditable(false);
        txtJewelDiscount.setBackground(new java.awt.Color(255, 255, 255));
        txtJewelDiscount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtJewelCarat.setEditable(false);
        txtJewelCarat.setBackground(new java.awt.Color(255, 255, 255));
        txtJewelCarat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtJewelWeight.setEditable(false);
        txtJewelWeight.setBackground(new java.awt.Color(255, 255, 255));
        txtJewelWeight.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtJewelWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJewelWeightActionPerformed(evt);
            }
        });

        editBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(0, 0, 255));
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(0, 0, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jewelIDLabel)
                            .addComponent(jewelNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtJewelName, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(txtJewelID)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jewelPriceLabel)
                            .addComponent(jewelDiscountLabel)
                            .addComponent(jewelCaratLabel)
                            .addComponent(jewelWeightLabel))
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJewelWeight, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(txtJewelCarat)
                            .addComponent(txtJewelDiscount)
                            .addComponent(txtJewelPrice))))
                .addGap(96, 96, 96))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(operationLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(editBtn)
                        .addGap(131, 131, 131)
                        .addComponent(deleteBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(operationLabel)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelID, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelIDLabel))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelName, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelNameLabel))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelPriceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelDiscountLabel))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelCarat, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelCaratLabel))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJewelWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jewelWeightLabel))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn)
                    .addComponent(deleteBtn))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtJewelIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJewelIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJewelIDActionPerformed

    private void txtJewelWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJewelWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJewelWeightActionPerformed

    private void txtJewelPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJewelPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJewelPriceActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        String opt = editBtn.getText();
        if("Edit".equals(opt)){
            txtJewelName.setEditable(true);
            txtJewelPrice.setEditable(true);
            txtJewelDiscount.setEditable(true);
            txtJewelCarat.setEditable(true);
            txtJewelWeight.setEditable(true);
            editBtn.setText("Save");
        }
        else{
            if(helper.UpdateJewelDetails(txtJewelID.getText(), 
                    txtJewelName.getText(), txtJewelPrice.getText(), 
                    txtJewelDiscount.getText(), txtJewelCarat.getText(),
                    txtJewelWeight.getText()
            )){
                JOptionPane.showMessageDialog(this, "Details updated");
            }else{
                JOptionPane.showMessageDialog(this, "Unable to update details");
            }
            loadData(txtJewelID.getText());
            txtJewelName.setEditable(false);
            txtJewelPrice.setEditable(false);
            txtJewelDiscount.setEditable(false);
            txtJewelCarat.setEditable(false);
            txtJewelWeight.setEditable(false);
            editBtn.setText("Edit");
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if(helper.deleteJewel(txtJewelID.getText())){
            JOptionPane.showMessageDialog(this, "Jewel details deleted");
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "Unable to delete");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    public void loadData(String stockId){
        String[] data = helper.GetProductInsightData(stockId);
        if(data != null){
            txtJewelID.setText(stockId);
            txtJewelName.setText(data[0]);
            txtJewelPrice.setText(data[1]);
            txtJewelDiscount.setText(data[2]);
            txtJewelCarat.setText(data[3]);
            txtJewelWeight.setText(data[4]);
        }else{
            JOptionPane.showMessageDialog(this, "Unable to reterive jewel data");
        }
    }
    /**
     * @param stockId
     */
    public static void Start(String stockId, boolean isEditable) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductInsight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductInsight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductInsight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductInsight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            ProductInsight insight = new ProductInsight();
            insight.setVisible(true);
            insight.editBtn.setVisible(isEditable);
            insight.deleteBtn.setVisible(isEditable);
            insight.loadData(stockId);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jewelCaratLabel;
    private javax.swing.JLabel jewelDiscountLabel;
    private javax.swing.JLabel jewelIDLabel;
    private javax.swing.JLabel jewelNameLabel;
    private javax.swing.JLabel jewelPriceLabel;
    private javax.swing.JLabel jewelWeightLabel;
    private javax.swing.JLabel operationLabel;
    private javax.swing.JTextField txtJewelCarat;
    private javax.swing.JTextField txtJewelDiscount;
    private javax.swing.JTextField txtJewelID;
    private javax.swing.JTextField txtJewelName;
    private javax.swing.JTextField txtJewelPrice;
    private javax.swing.JTextField txtJewelWeight;
    // End of variables declaration//GEN-END:variables
}
