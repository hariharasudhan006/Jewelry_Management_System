/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jewelry_management_system.login;

import jewelry_management_system.db.DBHelper;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author MYPC
 */
public class ChangePassword extends javax.swing.JDialog {

    /**
     * Creates new form ChangePassword
     */
    private final DBHelper helper;
    public ChangePassword(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        helper = DBHelper.getDBHelperInstance();
        initComponents();
        setLocation(650,250);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLabel oldPasswordLabel = new JLabel();
        JLabel retypePasswordLabel = new JLabel();
        JLabel newPasswordLabel = new JLabel();
        // Variables declaration - do not modify//GEN-BEGIN:variables
        JButton changePasswordBtn = new JButton();
        txtNewPassword = new javax.swing.JPasswordField();
        txtOldPassword = new javax.swing.JPasswordField();
        txtRetypePassword = new javax.swing.JPasswordField();
        oldPasswordErrMsg = new javax.swing.JLabel();
        retypePasswordErrMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Password");
        setResizable(false);

        oldPasswordLabel.setFont(new java.awt.Font("Serif", Font.BOLD, 18)); // NOI18N
        oldPasswordLabel.setForeground(new java.awt.Color(0, 0, 204));
        oldPasswordLabel.setText("Old Password");

        retypePasswordLabel.setFont(new java.awt.Font("Serif", Font.BOLD, 18)); // NOI18N
        retypePasswordLabel.setForeground(new java.awt.Color(0, 0, 255));
        retypePasswordLabel.setText("Re-Enter New Password");

        newPasswordLabel.setFont(new java.awt.Font("Serif", Font.BOLD, 18)); // NOI18N
        newPasswordLabel.setForeground(new java.awt.Color(0, 0, 204));
        newPasswordLabel.setText("New Password");

        changePasswordBtn.setFont(new java.awt.Font("Serif", Font.BOLD, 14)); // NOI18N
        changePasswordBtn.setForeground(new java.awt.Color(0, 0, 255));
        changePasswordBtn.setText("Change Password");
        changePasswordBtn.addActionListener(evt -> changePassword());

        txtNewPassword.setFont(new java.awt.Font("Serif", Font.PLAIN, 14)); // NOI18N
        txtNewPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewPasswordFocusGained();
            }
        });

        txtOldPassword.setFont(new java.awt.Font("Serif", Font.PLAIN, 14)); // NOI18N
        txtOldPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOldPasswordFocusGained();
            }
        });


        txtRetypePassword.setFont(new java.awt.Font("Serif", Font.PLAIN, 14)); // NOI18N
        txtRetypePassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRetypePasswordFocusGained();
            }
        });

        oldPasswordErrMsg.setForeground(new java.awt.Color(255, 0, 51));

        retypePasswordErrMsg.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNewPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(txtOldPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(txtRetypePassword, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(newPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oldPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retypePasswordErrMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(oldPasswordErrMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(retypePasswordLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(changePasswordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(oldPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(oldPasswordErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(newPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(retypePasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRetypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(retypePasswordErrMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(changePasswordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOldPasswordFocusGained() {//GEN-FIRST:event_txtOldPasswordFocusGained
        clearErrors();
    }//GEN-LAST:event_txtOldPasswordFocusGained

    private void txtNewPasswordFocusGained() {//GEN-FIRST:event_txtNewPasswordFocusGained
        clearErrors();
    }//GEN-LAST:event_txtNewPasswordFocusGained

    private void txtRetypePasswordFocusGained() {//GEN-FIRST:event_txtRetypePasswordFocusGained
         clearErrors();
    }//GEN-LAST:event_txtRetypePasswordFocusGained

    private void changePassword() {
        String oldPassword = new String(txtOldPassword.getPassword());
        String newPassword = new String(txtNewPassword.getPassword());
        String retypedNewPassword = new String(txtRetypePassword.getPassword());
        if(helper.verifyPassword(oldPassword)){
            if(!newPassword.equals(oldPassword)) {
                if (newPassword.equals(retypedNewPassword)) {
                    if (helper.updatePassword(newPassword)) {
                        JOptionPane.showMessageDialog(this,
                                "Password changed");
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Something went wrong, Unable to change password");
                    }
                } else {
                    retypePasswordErrMsg.setText("Password mismatches");
                }
            }else{
                JOptionPane.showMessageDialog(this,
                        "Old password and new password cannot be same.");
            }
        }else {
            oldPasswordErrMsg.setText("Incorrect password");
        }
    }

    private void clearErrors(){
        oldPasswordErrMsg.setText("");
        retypePasswordErrMsg.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException |
                InstantiationException |
                IllegalAccessException |
                UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ChangePassword dialog = new ChangePassword(new JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel oldPasswordErrMsg;
    private javax.swing.JLabel retypePasswordErrMsg;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JPasswordField txtOldPassword;
    private javax.swing.JPasswordField txtRetypePassword;
    // End of variables declaration//GEN-END:variables
}
